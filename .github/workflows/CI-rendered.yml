name: CI/CD - Deploy to GitHub Pages

on:
  push:
    branches:
      - 'main'
    paths:
      - 'apps/renderer/**'
  pull_request:
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  pages: write
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      # Optional: Install Cypress if needed for your project
      # - run: npx cypress install

      - name: Setup NX affected SHAs
        uses: nrwl/nx-set-shas@v4

      #   - name: Lint affected projects
      # run: npx nx affected -t lint

      # Build the renderer app (your Angular app)
      - name: Build renderer app
        run: npx nx build renderer --configuration=production --base-href /${{ github.event.repository.name }}/

      # Create 404.html for GitHub Pages SPA routing
      - name: Create 404.html
        run: cp dist/apps/renderer/index.html dist/apps/renderer/404.html

      # Setup GitHub Pages
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      # Upload the built app as an artifact
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist/apps/renderer'

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
